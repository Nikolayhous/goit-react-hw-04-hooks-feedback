{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","FeedbackOptions","options","onLeaveFeedback","feedbackBtn","map","option","btn","type","onClick","Notification","message","text","Statistics","good","neutral","bad","total","positivePercentage","list","item","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,2B,kBCAvID,EAAOC,QAAU,CAAC,YAAc,qCAAqC,IAAM,+B,iBCA3ED,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,6HCKVC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACjB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCc1BI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACtB,OACI,gCACI,oBAAIC,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,M,gBCkBEM,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,qBAAKP,UAAWC,IAAEO,YAAlB,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBAEIV,UAAWC,IAAEU,IACbC,KAAK,SACLC,QAAS,kBAAMN,EAAgBG,IAJnC,SAMKA,GALIA,S,gBCGVI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OAAO,mBAAGf,UAAWC,IAAEe,KAAhB,SAAuBD,K,gBC4BnBE,MA5Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,mCACKD,EACG,qBAAIrB,UAAWC,IAAEsB,KAAjB,UACI,qBAAIvB,UAAWC,IAAEuB,KAAjB,kBAA6BN,KAC7B,qBAAIlB,UAAWC,IAAEuB,KAAjB,qBAAgCL,KAChC,qBAAInB,UAAWC,IAAEuB,KAAjB,iBAA4BJ,KAC5B,qBAAIpB,UAAWC,IAAEuB,KAAjB,mBAA8BH,KAC9B,qBAAIrB,UAAWC,IAAEuB,KAAjB,+BACuBF,EADvB,UAKJ,cAAC,EAAD,CAAcP,QAAQ,yBCuCvBU,MAnDf,WACI,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAmBMC,EAAqB,WACvB,OAAOZ,EAAOC,EAAUC,GAO5B,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAShB,MAAO,wBAAhB,SACI,cAAC,EAAD,CACIE,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA9BQ,SAAAG,GACpB,OAAQA,GACJ,IAAK,OACDiB,GAAQ,SAAAT,GAAI,OAAIA,EAAO,KACvB,MACJ,IAAK,UACDU,GAAW,SAAAT,GAAO,OAAIA,EAAU,KAChC,MACJ,IAAK,MACDU,GAAO,SAAAT,GAAG,OAAIA,EAAM,KACpB,MAEJ,QACI,aAoBJ,cAAC,EAAD,CAAShB,MAAO,cAAhB,SACI,cAAC,EAAD,CACIc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAjBLS,KAAKC,MAAOd,EAAOY,IAAwB,KAAO,W,MC5BjEG,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.43d5b6df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__39a-y\",\"title\":\"Statistics_title__2Cn4-\",\"list\":\"Statistics_list__2Coe-\",\"item\":\"Statistics_item__qaqUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__2c7l7\",\"btn\":\"FeedbackOptions_btn__pe2Rf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__26bYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2gDU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1XyL8\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n    return (\n        <div>\n            <h2 className={s.title}>{title}</h2>\n            {children}\n        </div>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n    return (\n        <div className={s.feedbackBtn}>\n            {options.map(option => (\n                <button\n                    key={option}\n                    className={s.btn}\n                    type=\"button\"\n                    onClick={() => onLeaveFeedback(option)}\n                >\n                    {option}\n                </button>\n            ))}\n        </div>\n    );\n}\n\nFeedbackOptions.propTypes = {\n    onLeaveFeedback: PropTypes.func.isRequired,\n    options: PropTypes.array,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n    return <p className={s.text}>{message}</p>;\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n        <>\n            {total ? (\n                <ul className={s.list}>\n                    <li className={s.item}>Good:{good}</li>\n                    <li className={s.item}>Neutral:{neutral}</li>\n                    <li className={s.item}>Bad:{bad}</li>\n                    <li className={s.item}>Total:{total}</li>\n                    <li className={s.item}>\n                        Positive feedback:{positivePercentage}%\n                    </li>\n                </ul>\n            ) : (\n                <Notification message=\"No feedback given\" />\n            )}\n        </>\n    );\n}\n\nStatistics.propTypes = {\n    positivePercentage: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import { useState } from 'react';\r\nimport Container from '../Container';\r\nimport Section from '../Section';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\n\r\nfunction App() {\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad, setBad] = useState(0);\r\n\r\n    const onLeaveFeedback = option => {\r\n        switch (option) {\r\n            case 'good':\r\n                setGood(good => good + 1);\r\n                break;\r\n            case 'neutral':\r\n                setNeutral(neutral => neutral + 1);\r\n                break;\r\n            case 'bad':\r\n                setBad(bad => bad + 1);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const countTotalFeedback = () => {\r\n        return good + neutral + bad;\r\n    };\r\n\r\n    const countPositiveFeedbackPercentage = () => {\r\n        return Math.round((good / countTotalFeedback()) * 100 || 0);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Section title={'Please leave feedback'}>\r\n                <FeedbackOptions\r\n                    options={['good', 'neutral', 'bad']}\r\n                    onLeaveFeedback={onLeaveFeedback}\r\n                />\r\n            </Section>\r\n            <Section title={'Statistical'}>\r\n                <Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={countTotalFeedback()}\r\n                    positivePercentage={countPositiveFeedbackPercentage()}\r\n                />\r\n            </Section>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}